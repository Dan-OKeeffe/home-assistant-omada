name: Build and Push Multi-Platform Docker Image

on:
  push:
    tags:
      - 'v*-stable'
      - 'v*-beta'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: jeruntu
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract Docker tag from Git tag
        id: version
        run: |
          # Extract the Git tag name
          GIT_TAG="${GITHUB_REF_NAME}"

          # Remove 'v' prefix and '-stable' or '-beta' suffix
          DOCKER_TAG="${GIT_TAG#v}"          # Remove leading 'v'
          DOCKER_TAG="${DOCKER_TAG%-*}"      # Remove trailing '-stable' or '-beta'

          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV

      - name: Set image name and config file based on tag type
        id: image_name
        run: |
          if [[ "${GITHUB_REF_NAME}" == *-beta ]]; then
            echo "IMAGE_NAME=jeruntu/home-assistant-omada-beta" >> $GITHUB_ENV
            echo "CONFIG_FILE=Omada Beta/config.yaml" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_NAME}" == *-stable ]]; then
            echo "IMAGE_NAME=jeruntu/home-assistant-omada-stable" >> $GITHUB_ENV
            echo "CONFIG_FILE=Omada Stable/config.yaml" >> $GITHUB_ENV
          fi

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.27.3/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Verify Docker tag matches config.yaml
        run: |
          # Extract the expected tag from the config.yaml file
          EXPECTED_TAG=$(yq '.version' "${CONFIG_FILE}")

          # Check if the expected tag matches the extracted Docker tag
          if [[ "${EXPECTED_TAG}" != "${DOCKER_TAG}" ]]; then
            echo "Error: Docker tag (${DOCKER_TAG}) does not match expected tag (${EXPECTED_TAG}) in ${CONFIG_FILE}."
            exit 1
          fi
          echo "INSTALL_VER=${DOCKER_TAG}" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          platforms: linux/amd64,linux/arm64
          file: ./Omada Dev/Dockerfile
          context: ./Omada Dev
          build-args: |
            INSTALL_VER=${{ env.INSTALL_VER }}
